add_subdirectory(Architecture)
add_subdirectory(ByteCode)
add_subdirectory(CallingConvention)
add_subdirectory(Concolic)
add_subdirectory(Debugger)
add_subdirectory(Disassembler)
add_subdirectory(Dwarf)
add_subdirectory(InstructionSemantics)
add_subdirectory(ModelChecker)
add_subdirectory(Partitioner2)
add_subdirectory(Unparser)
add_subdirectory(Variables)

add_library(roseBinaryAnalysis OBJECT
  AbstractLocation.C
  AddressInterval.C
  AddressIntervalSet.C
  Alignment.C
  AsmFunctionIndex.C
  AstHasher.C
  BestMapAddress.C
  BinaryLoader.C
  BinaryLoaderElf.C
  BinaryLoaderElfObj.C
  BinaryLoaderPe.C
  ByteOrder.C
  CodeInserter.C
  ConcreteLocation.C
  ControlFlow.C
  DataDependence.C
  DataFlow.C
  Demangler.C
  FeasiblePath.C
  FunctionCall.C
  FunctionSimilarity.C
  Hexdump.C
  HotPatch.C
  InstructionProvider.C
  LibraryIdentification.C
  MagicNumber.C
  MemoryMap.C
  NoOperation.C
  PointerDetection.C
  Reachability.C
  ReadWriteSets.C
  RegisterDescriptor.C
  RegisterParts.C
  RegisterDictionary.C
  RegisterNames.C
  RelativeVirtualAddress.C
  ReturnValueUsed.C
  SerialIo.C
  SmtCommandLine.C
  SmtlibSolver.C
  SmtSolver.C
  SourceLocations.C
  SRecord.C
  StackDelta.C
  String.C
  SymbolicExpression.C
  SymbolicExpressionParser.C
  SystemCall.C
  TaintedFlow.C
  ToSource.C
  VxworksTerminal.C
  Z3Solver.C)

add_dependencies(roseBinaryAnalysis rosetta_generated)

# SerialIo.C takes a long time to compile with full debug info and
# -Og, so reduce debug info and use -O0 for faster compilation in
# Debug builds. These append the compile options to the command lines,
# thereby overriding any previous "-g" and "-O" switches.
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
  set_source_files_properties(SerialIo.C PROPERTIES
    COMPILE_OPTIONS "-g1;-O0")
elseif(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
  set_source_files_properties(SerialIo.C PROPERTIES
    COMPILE_OPTIONS "-g1")
endif()

install(FILES
  AbstractLocation.h
  Address.h
  AddressInterval.h
  AddressIntervalSet.h
  AddressSet.h
  Alignment.h
  Architecture.h
  AsmFunctionIndex.h
  AstHasher.h
  BasicTypes.h
  BestMapAddress.h
  BinaryLoader.h
  BinaryLoaderElf.h
  BinaryLoaderElfObj.h
  BinaryLoaderPe.h
  ByteCode.h
  ByteOrder.h
  CallingConvention.h
  CodeInserter.h
  Concolic.h
  ConcreteLocation.h
  ControlFlow.h
  DataDependence.h
  DataFlow.h
  Debugger.h
  Demangler.h
  Disassembler.h
  Dwarf.h
  FeasiblePath.h
  FunctionCall.h
  FunctionSimilarity.h
  Hexdump.h
  HotPatch.h
  InstructionEnumsAarch32.h
  InstructionEnumsAarch64.h
  InstructionEnumsCil.h
  InstructionEnumsJvm.h
  InstructionEnumsM68k.h
  InstructionEnumsMips.h
  InstructionEnumsPowerpc.h
  InstructionEnumsX86.h
  InstructionMap.h
  InstructionProvider.h
  InstructionSemantics.h
  LibraryIdentification.h
  MagicNumber.h
  Matrix.h
  MemoryMap.h
  ModelChecker.h
  NoOperation.h
  Partitioner2.h
  PointerDetection.h
  Reachability.h
  ReadWriteSets.h
  RegisterDescriptor.h
  RegisterDictionary.h
  RegisterNames.h
  RegisterParts.h
  RelativeVirtualAddress.h
  ReturnValueUsed.h
  SerialIo.h
  SmtCommandLine.h
  SmtlibSolver.h
  SmtSolver.h
  SourceLocations.h
  SRecord.h
  StackDelta.h
  String.h
  SymbolicExpr.h
  SymbolicExpression.h
  SymbolicExprParser.h
  SymbolicExpressionParser.h
  SystemCall.h
  TaintedFlow.h
  ToSource.h
  Unparser.h
  Utility.h
  Variables.h
  VxworksTerminal.h
  Z3Solver.h

  DESTINATION ${INCLUDE_INSTALL_DIR}/Rose/BinaryAnalysis)
